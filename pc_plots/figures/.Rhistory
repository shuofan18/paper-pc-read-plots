biv <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
dfbiv <- diff(biv)
biv <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
dfbiv <- diff(biv)
model <- VAR(dfbiv, p=2, type="const")
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
model <- VAR(dfbiv, p=2, type="const")
Acm = Acoef(model)
Acm
model
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
biv <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
dfbiv <- diff(biv)
model <- VAR(dfbiv, p=2, type="const")
Acm = Acoef(model)
A1 <- Acm[[1]]
A2 <- Acm[[2]]
kable(A1, col.names = c("Consumption lag 1", "Income lag 1"), caption = "Coefficient matrix A1")
kable(A2, col.names = c("Consumption lag 2", "Income lag 2"), caption = "Coefficient matrix A2")
A0 <- matrix(c(0.044288507, 0.001650857), ncol=1)
A0 <- cbind(c("Consumption", "Income"), A0)
kable(A0, col.names = c("Intercept"), caption = "Intercept matrix")
A0 <- cbind(c("Consumption", "Income"), A0)
A0
AIC <- VAR(dfbiv, lag.max = 10, ic="AIC", type = "const") %>% .$p
BIC <- VAR(dfbiv, lag.max = 10, ic="SC", type = "const") %>% .$p
HQ <- VAR(dfbiv, lag.max = 10, ic="HQ", type = "const") %>% .$p
FPE <- VAR(dfbiv, lag.max = 10, ic="FPE", type = "const") %>% .$p
IC <- c(AIC, BIC, HQ, FPE)
kable(IC, col.names = "Lags chosen by Information Criteria", caption = "AIC, HQ and FPE choose lag of order 3 while BIC chooses 1.")
setwd("/Users/stanza/documents/github/etf5200-time-series")
library(readxl)
library(tidyverse)
library(reshape2)
tsdata <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4) %>% melt(id="time")
ggplot(tsdata,aes(x=Var1,y=value,colour=Var2,group=Var2))+geom_line()+theme(axis.text.x=element_blank(),axis.text.y=element_blank())+xlab("time")+ylab("level series")+labs(colour = "Variables")
dfdata <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
dfdata <- diff(dfdata) %>% melt(id="time")
ggplot(dfdata,aes(x=Var1,y=value,colour=Var2,group=Var2))+geom_line()+theme(axis.text.x=element_blank(),axis.text.y=element_blank())+xlab("time")+ylab("First-differenced series")+labs(colour = "Variables")+facet_grid(. ~ Var2)
View(dfdata)
biv <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
View(biv)
biv <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
View(biv)
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
?VECM
mmodel <- VECM(mm, lag=3, r=1)
mmodel
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
mmodel <- VECM(mm, lag=3, r=1)
dwt <- mmodel %>% dwtest() %>%
dwt <- mmodel %>% dwtest()
dwt <- mmodel %>% dwtest() %>% .$p,value
dwt <- mmodel %>% dwtest() %>% .$p.value
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
mmodel <- VECM(mm, lag=3, r=1)
dwt <- mmodel %>% dwtest() %>% .$p.value
summary(mmodel)
dwstat <- sum(diff(res)^2)/sum(res^2)
res <- mmodel$residuals
dwstat <- sum(diff(res)^2)/sum(res^2)
dwstat
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
mmodel <- VECM(mm, lag=2, r=1)
res <- mmodel$residuals
dwstat <- sum(diff(res)^2)/sum(res^2)
dwstat
mme <- exp(mm)
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
mme <- exp(mm)
mmodel <- VECM(mme, lag=2, r=1)
res <- mmodel$residuals
dwstat <- sum(diff(res)^2)/sum(res^2)
dwstat
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B137") %>% ts(start=c(1947,1), frequency = 4)
mme <- exp(mm)
mmodel <- VECM(mme, lag=2, r=1)
res <- mmodel$residuals
dwstat <- sum(diff(res)^2)/sum(res^2)
dwstat
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B137") %>% ts(start=c(1947,1), frequency = 4)
mmodel <- VECM(mm, lag=2, r=1)
res <- mmodel$residuals
dwstat <- sum(diff(res)^2)/sum(res^2)
dwstat
mmodel$coefficients
coe <- mmodel$coefficients
coe[[1]]
coe[[2]]
coe
coe <- mmodel %>% Acoef()
coe <- mmodel %>% Acoef(.)
?VECM
coe <- mmodel %>% coefA()
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
mmodel <- VECM(mm, lag=2, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeA
coeB
coeP <- mmodel %>% coefPI()
coeP
jotest <- ca.jo(mm, type = "trace", ecdet = "trend", K=2)
jotest
?ca.jo
jotest <- ca.jo(mm, type = "trace", ecdet = "trend", K=4)
jotest
summary(jotest)
jotest <- ca.jo(mm, type = "trace", K=4)
summary(jotest)
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
jotest <- ca.jo(mm, type = "trace", K=4, ecdet = "trend")
summary(jotest)
mmodel <- VECM(mm, lag=2, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
coeA
coeB
coeP
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
jotest <- ca.jo(mm, type = "trace", K=3, ecdet = "trend")
summary(jotest)
mmodel <- VECM(mm, lag=2, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
coeA
coeB
coeP
A <- VAR(mm, lag.max = 10, ic="AIC", type = "const") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "const") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "const") %>% .$p
A
B
H
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
A
B
H
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC <- c(A, B, H, FP)
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC2 <- c(A, B, H, FP)
IC2
summary(jotest)
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC2 <- c(A, B, H, FP)
kable(IC2, col.names = "Lags chosen by Information Criteria", caption = "VAR with level data. AIC, HQ and FPE choose lag of order 4 while BIC chooses 2.")
jotest <- ca.jo(mm, type = "trace", K=4, ecdet = "trend")
summary(jotest)
mmodel <- VECM(mm, lag=2, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
coeA
coeB
coeP
jotest
library(tsDyn)
library(mvtnorm)
library(vars)
library(knitr)
library(lmtest)
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC2 <- c(A, B, H, FP)
kable(IC2, col.names = "Lags chosen by Information Criteria", caption = "VAR with level data. AIC, HQ and FPE choose lag of order 4 while BIC chooses 2.")
jotest <- ca.jo(mm, type = "trace", K=4, ecdet = "trend")
summary(jotest)
mmodel <- VECM(mm, lag=3, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
coeA
coeB
coeP
coeA
kable(coeA, col.names = c("ECT"), caption = "Coefficient of Error-correction term")
coeB
coeB
coeP
coeA
coeA
coeB
coeP
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC2 <- c(A, B, H, FP)
kable(IC2, col.names = "Lags chosen by Information Criteria", caption = "VAR with level data. AIC, HQ and FPE choose lag of order 4 while BIC chooses 2.")
jotest <- ca.jo(mm, type = "trace", K=4, ecdet = "trend")
jotest
mmodel <- VECM(mm, lag=3, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
kable(coeA, col.names = "ECT", caption = "Estimated Coefficient of Error-correction term")
kable(coeB, col.names = "Cointegrating vector", caption = "Estimated Cointegrating vector")
kable(coeP, col.names = c("Consumption", "Income"), caption = "Estimated Pi matrix")
?ca.jo
mm <- read_excel("USdata2.xls", sheet = 1, range = "A1:B252") %>% ts(start=c(1947,1), frequency = 4)
A <- VAR(mm, lag.max = 10, ic="AIC", type = "trend") %>% .$p
B <- VAR(mm, lag.max = 10, ic="SC", type = "trend") %>% .$p
H <- VAR(mm, lag.max = 10, ic="HQ", type = "trend") %>% .$p
FP <- VAR(mm, lag.max = 10, ic="FPE", type = "trend") %>% .$p
IC2 <- c(A, B, H, FP)
kable(IC2, col.names = "Lags chosen by Information Criteria", caption = "VAR with level data. AIC, HQ and FPE choose lag of order 4 while BIC chooses 2.")
jotest <- ca.jo(mm, type = "trace", K=4, ecdet = "trend")
print(jotest)
mmodel <- VECM(mm, lag=3, r=1)
coeA <- mmodel %>% coefA()
coeB <- mmodel %>% coefB()
coeP <- mmodel %>% coefPI()
kable(coeA, col.names = "ECT", caption = "Estimated Coefficient of Error-correction term")
kable(coeB, col.names = "Cointegrating vector", caption = "Estimated Cointegrating vector")
kable(coeP, col.names = c("Consumption", "Income"), caption = "Estimated Pi matrix")
josum <- summary(jotest)
summary(jotest)
summary(jotest)$p
class(jotest)
summary(jotest)$urca
summary(jotest)[[1]]
summary(jotest)[1]
49*128
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters3")
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters3.csv")
View(white_power_test)
white_power_test <- white_power_test$wt_conclusion %>% mean()
white_power_test
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters4.csv")
white_power_test <- white_power_test$wt_conclusion %>% mean()
white_power_test
1-white_power_test
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters1.csv")
white_power_test <- white_power_test$wt_conclusion %>% mean()
white_power_test
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters2.csv")
white_power_test <- white_power_test$wt_conclusion %>% mean()
1-white_power_test
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters5.csv")
white_power_test <- white_power_test$wt_conclusion %>% mean()
white_power_test
white_power_test <- read.csv("/volumes/5550/heter&linear/parameters/parameters6.csv")
white_power_test <- white_power_test$wt_conclusion %>% mean()
1-white_power_test
tibble(c1,c2,c3,c4,c5)
c1 <- c(100,100,300,300)
c2 <- c(5,12,5,12)
c3 <- c("0,1,3,5,8", "1,3,8,10,16", "0,1,2,3,5", "1,3,5,7,10")
c4 <- c("0.25, 0.75, 1.25, 1.75, 2.75", "0.5, 1.5, 3.5, 4.5, 6", "0.1, 0.4, 0.7, 1, 1.5","0, 0.8, 1.75, 2.3, 3.5")
c5 <- c("0.1, 0.4, 0.75, 1.25, 1.5, 2.25", "", "", "")
tibble(c1,c2,c3,c4,c5)
tibble(c1,c2,c3,c4,c5) %>% kable()
c1 <- c(100,100,300,300)
c2 <- c(5,12,5,12)
c3 <- c("0,1,3,5,8", "1,3,8,10,16", "0,1,2,3,5", "1,3,5,7,10")
c4 <- c("0.25, 0.75, 1.25, 1.75, 2.75", "0.5, 1.5, 3.5, 4.5, 6", "0.1, 0.4, 0.7, 1, 1.5","0, 0.8, 1.75, 2.3, 3.5")
c5 <- c("0.1, 0.4, 0.75, 1.25, 1.5, 2.25", "", "", "")
tibble(c1,c2,c3,c4,c5) %>% kable(col.names = c("Sample size (n)", "Error SD(sigma)", "Experiment 1 beta2", "Experiment 2 beta1", "Experiment 3 beta1"))
?kable
View(parameters_b)
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 10)
hist_n_l
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 0.01)
hist_n_l
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 1)
hist_n_l
hist_b_l <- ggplot(data = parameters_b, aes(beta))+geom_histogram(binwidth = 0.1)
hist_b_l
hist_b_l <- ggplot(data = parameters_b, aes(beta))+geom_histogram(binwidth = 0.05)
hist_b_l
hist_b_l <- ggplot(data = parameters_b, aes(beta))+geom_histogram(binwidth = 0.1)
hist_s_l <- ggplot(data = parameters_b, aes(sigma))+geom_histogram(binwidth = 0.1)
hist_s_l
View(parameters_b)
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value))+geom_histogram(binwidth = 0.001)
hist_p_l
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value))+geom_histogram(binwidth = 0.05)
hist_p_l
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value))+geom_histogram(binwidth = 0.01)
hist_p_l
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 10)+theme(axis.title.x="Simulated sample sizes n")
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value))+geom_histogram(binwidth = 0.01)+xlab("p.value of t-test")
hist_p_l
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_p_l, hist_s_l)
ggsave("hist_b_plots.png", path = "~/documents/github/etf5550/monashthesis-master/figures")
ggsave("hist_b_plots.png", plot = hist_b_plots ,path = "~/documents/github/etf5550/monashthesis-master/figures")
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")
scap_beta_n
hist_n_l <- hist_n_l+ggtitle
hist_n_l <- hist_n_l+ggtitle("")
hist_n_l <- hist_n_l+ggtitle("Histogram of simulated n")
hist_n_l
hist_b_l <- hist_b_l+ggtitle("Histogram of simulated beta")
hist_p_l <- hist_p_l+ggtitle("Histogram of estimated p value of t-test")
hist_sigma_l <- hist_sigma_l+ggtitle("Histogram of simulated sigma")
hist_sigma_l <- hist_sigma+ggtitle("Histogram of simulated sigma")
scap_beta_n <- scap_beta_n+ggtitle("Scatter plot of simulated n and beta")
scap_sigma_n <- scap_sigma_n+ggtitle("Scatter plot of simulated n and sigma")
scap_sigma_n
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")
scap_sigma_n <- scap_sigma_n+ggtitle("Scatter plot of simulated n and sigma")
scap_sigma_n
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta))+geom_point(shape=".")
scap_beta_n <- scap_beta_n+ggtitle("Scatter plot of simulated n and beta")
scap_beta_n
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_sigma_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=3)
hist_b_plots
ggsave("hist_b_plots.png", plot = hist_b_plots ,path = "~/documents/github/etf5550/monashthesis-master/figures")
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_sigma_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=2)
ggsave("hist_b_plots.png", plot = hist_b_plots ,path = "~/documents/github/etf5550/monashthesis-master/figures")
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")+theme(aspect.ratio = 1)
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta))+geom_point(shape=".")+theme(aspect.ratio = 1)
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta))+geom_point(shape=".")+theme(aspect.ratio = 1)+ggtitle("Scatter plot of simulated n and beta")
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")+theme(aspect.ratio = 1)+ggtitle("Scatter plot of simulated n and sigma")
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_sigma_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=1)
ggsave("hist_b_plots.png", plot = hist_b_plots ,path = "~/documents/github/etf5550/monashthesis-master/figures")
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_sigma_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=2)
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta))+geom_point(shape=".")+ggtitle("Scatter plot of simulated n and beta")
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")+ggtitle("Scatter plot of simulated n and sigma")
hist_b_plots <- grid.arrange(hist_n_l, hist_b_l, hist_sigma_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=2)
ggsave("hist_b_plots.png", plot = hist_b_plots ,path = "~/documents/github/etf5550/monashthesis-master/figures")
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n, y=sigma))+geom_point(shape=".")+theme(aspect.ratio = 1)+ggtitle("Scatter plot of simulated n and sigma")
parameters_0 <- read.csv("data/parameters_0.csv")
parameters_b <- read.csv("data/parameters_b.csv")
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 1)+theme(plot.title = element_text(size = 12))+ggtitle("Histogram of simulated n")
#parameters_0 <- read.csv("data/parameters_0.csv")
#parameters_b <- read.csv("data/parameters_b.csv")
hist_n_l <- ggplot(data = parameters_b, aes(n))+geom_histogram(binwidth = 1)+theme(plot.title = element_text(size = 12))+ggtitle("Histogram of simulated n")
#parameters_0 <- read.csv("data/parameters_0.csv")
#parameters_b <- read.csv("data/parameters_b.csv")
hist_n_l <- ggplot(data = parameters_b, aes(n)) + geom_histogram(binwidth = 1) + theme(plot.title = element_text(size = 12)) + ggtitle("Histogram of simulated n")
hist_b_l <- ggplot(data = parameters_b, aes(beta)) + geom_histogram(binwidth = 0.1) + theme(plot.title = element_text(size = 12)) + ggtitle("Histogram of simulated beta")
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value)) + geom_histogram(binwidth = 0.01) + theme(plot.title = element_text(size = 12)) + ggtitle("Histogram of estimated p value of t-test")
hist_s_l <- ggplot(data = parameters_b, aes(sigma)) + geom_histogram(binwidth = 0.1) + theme(plot.title = element_text(size = 12)) + ggtitle("Histogram of simulated sigma")
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta)) + geom_point(shape=".") + ggtitle("Scatter plot of simulated n and beta") + theme(plot.title = element_text(size = 12))
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n,y=sigma)) + geom_point(shape=".") + ggtitle("Scatter plot of simulated n and sigma") + theme(plot.title = element_text(size = 12))
parameters_b <- read.csv("data/parameters_b.csv")
hist_n_l <- ggplot(data = parameters_b, aes(n)) + geom_histogram(binwidth = 1) + theme(plot.title = element_text(size = 10)) + ggtitle("Histogram of simulated n")
hist_b_l <- ggplot(data = parameters_b, aes(beta)) + geom_histogram(binwidth = 0.1) + theme(plot.title = element_text(size = 10)) + ggtitle("Histogram of simulated beta from linear model")
hist_p_l <- ggplot(data = parameters_b, aes(ct.p.value)) + geom_histogram(binwidth = 0.01) + theme(plot.title = element_text(size = 10)) + ggtitle("Histogram of estimated p value of t-test from linear model")
hist_s_l <- ggplot(data = parameters_b, aes(sigma)) + geom_histogram(binwidth = 0.1) + theme(plot.title = element_text(size = 10)) + ggtitle("Histogram of simulated sigma from linear model")
scap_beta_n <- ggplot(data = parameters_b, aes(x=n, y=beta)) + geom_point(shape=".", alpha=0.01) + ggtitle("Scatter plot of simulated n and beta from linear model") + theme(plot.title = element_text(size = 10))
scap_sigma_n <- ggplot(data = parameters_b, aes(x=n,y=sigma)) + geom_point(shape=".") + ggtitle("Scatter plot of simulated n and sigma from linear model") + theme(plot.title = element_text(size = 10))
grid.arrange(hist_n_l, hist_b_l, hist_s_l, hist_p_l, scap_beta_n, scap_sigma_n, ncol=2)
model_loaded <- load_model_hdf5("data/weights.06-0.22.hdf5")
library(keras)
model_loaded <- load_model_hdf5("data/weights.06-0.22.hdf5")
model_loaded
library(keras)
model <- keras_model_sequential() %>%
layer_conv_2d(filters = 32, kernel_size = c(3, 3), activation = "relu",
input_shape = c(150, 150, 1)) %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 64, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_flatten() %>%
layer_dense(units = 512, activation = "relu") %>%
layer_dense(units = 1, activation = "sigmoid")
library(keras)
model <- keras_model_sequential() %>%
layer_conv_2d(filters = 32, kernel_size = c(3, 3), activation = "relu",
input_shape = c(150, 150, 1)) %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 64, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_flatten() %>%
layer_dense(units = 512, activation = "relu") %>%
layer_dense(units = 1, activation = "sigmoid")
model
model_loaded_15 <- load_model_hdf5("/volumes/5550/heter&linear/checkpoints/
523new15epoches/weights.11-0.08.hdf5")
library(keras)
model_loaded_15 <- load_model_hdf5("/volumes/5550/heter&linear/checkpoints/
523new15epoches/weights.11-0.08.hdf5")
model_loaded_15 <- load_model_hdf5("/Volumes/5550/heter&linear/checkpoints/
523new15epoches/weights.11-0.08.hdf5")
setwd(/Volumes/5550/heter&linear/checkpoints/
523new15epoches)
model_loaded_15 <- load_model_hdf5("/Volumes/5550/heter&linear/checkpoints/523new15epoches/weights.11-0.08.hdf5")
523new15epoches)
base_dir <- "/Volumes/5550/heter&linear"
test_dir <- file.path(base_dir,"test")
test_datagen <- image_data_generator(rescale = 1/255)
test_generator <- flow_images_from_directory(
test_dir,
test_datagen,
target_size = c(150, 150),
color_mode = "grayscale",
batch_size = 100,
class_mode = "binary"
)
acc11epoch_power <- model_loaded_15 %>% evaluate_generator(test_generator, steps = 1000)
library(keras)
model <- keras_model_sequential() %>%
layer_conv_2d(filters = 32, kernel_size = c(3, 3), activation = "relu",
input_shape = c(150, 150, 1)) %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 64, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_flatten() %>%
layer_dense(units = 512, activation = "relu") %>%
layer_dense(units = 1, activation = "sigmoid")
model
library(keras)
model <- keras_model_sequential() %>%
layer_conv_2d(filters = 32, kernel_size = c(3, 3), activation = "relu",
input_shape = c(150, 150, 1)) %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 64, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_conv_2d(filters = 128, kernel_size = c(3, 3), activation = "relu") %>%
layer_max_pooling_2d(pool_size = c(2, 2)) %>%
layer_flatten() %>%
layer_dense(units = 512, activation = "relu") %>%
layer_dense(units = 1, activation = "sigmoid")
kable(model)
acc11epoch_power
model_loaded_4 <- load_model_hdf5("/Volumes/5550/heter&linear/checkpoints/523new15epoches/weights.04-0.09.hdf5")
acc4epoch_power <- model_loaded_4 %>% evaluate_generator(test_generator, steps = 1000)
acc4epoch_power
